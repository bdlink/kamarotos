#!/bin/bash
. ${OKD_LAB_PATH}/bin/labEnv.sh
. ${OKD_LAB_PATH}/bin/labUtils.sh
. ${OKD_LAB_PATH}/bin/piUtils.sh
. ${OKD_LAB_PATH}/bin/routerUtils.sh
. ${OKD_LAB_PATH}/bin/clusterUtils.sh
. ${OKD_LAB_PATH}/bin/hostUtils.sh

SSH="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
SCP="scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

for i in "$@"
do
  case $i in
    -d=*|--domain=*)
      SUB_DOMAIN="${i#*=}"
    ;;
    *)
       # catch all
    ;;
  esac
done

if [[ -z ${SUB_DOMAIN} ]]
then
  labctx
else
  labctx ${SUB_DOMAIN}
fi

if [[ ${LAB_CTX_ERROR} == "true" ]]
then
  exit 1
fi

DOMAIN="${SUB_DOMAIN}.${LAB_DOMAIN}"
INSTALL_URL="http://${BASTION_HOST}/install"

for i in "$@"
do
  case $i in
    --pi)
      configPi "$@"
    ;;
    --router)
      configRouter "$@"
    ;;
    --disconnect)
      noInternet
    ;;
    --connect)
      restoreInternet
    ;;
    --deploy)
      deploy "$@"
    ;;
    --destroy)
      destroy "$@"
    ;;
    --start)
      start "$@"
    ;;
    --stop)
      stop "$@"
    ;;
    --user)
      addUser "$@"
    ;;
    --trust)
      trustClusterCert
    ;;
    --config-infra)
        configInfraNodes
    ;;
    --csr)
      approveCsr
    ;;
    --pull-secret)
      pullSecret
    ;;
    --git-secret)
      gitSecret "$@"
    ;;
    --latest)
      getOkdRelease
    ;;
    --console)
      ocConsole
    ;;
    --login)
      ocLogin
    ;;
    --cli)
      getOkdCmds
    ;;
    --dns)
      resetDns
    ;;
    --mirror)
      mirrorOkdRelease
    ;;
    --kube)
      setKubeConfig
      echo ${KUBECONFIG}
    ;;
    --update)
      updateCentos
    ;;
    --ceph)
      initCephVars "$@"
    ;;
    --monitor)
      monitor "$@"
    ;;
    *)
       # catch all
    ;;
  esac
done
